# include <iostream>
using namespace std;
int size=5;
int queue[5];
int front=-1;
int rear=-1;
void Enqueue(int element){
    //if queue if full
    if((front==0&&rear==size-1)||((rear+1)%size==front)){
        cout<<"Queue is full"<<endl;
        return;
    }
    //if queue is empty
    else if(front==-1){
        rear=0;
        front=0;
        queue[rear]=element;
    }
    //if rear is at end and queue is not full
    else if(rear==size-1){
        rear=(rear+1)%size;
        queue[rear]=element;
    }
    else{
        rear=rear+1;
        queue[rear]=element;
    }
    cout<<"element Inserted in Queue is :"<<element;
}
void Dequeue(){
      //if queue is empty
      if(front==-1){
        cout<<"Queue is Empty:";
        return;
      }
      int DqueueElement=queue[front];
      cout<<"Element deleted from Queue is:"<<DqueueElement<<endl;
       //if queue have only one element
      if(front==rear){
        front=-1;
        rear=-1;
      }
      else{
      front=(front+1)%size;
      }
}
void display(){
    //if queue is Empty
    if(front==-1){
        cout<<"Queue is Empty "<<endl;
        return;
    }
    cout<<"Queue elements are:";
    int i=front;
    while(true){
        cout << queue[i]<<" ";
        if(i == rear) break;
        i =( i + 1)% size;
    }
    cout<<endl;
}
int main(){
 Enqueue(10);
 cout<<endl;
 Enqueue(20);
 cout<<endl;
 Enqueue(45);
 cout<<endl;
 Dequeue();
 Dequeue();
 cout<<endl;
 display();
}
